version: '3.6'

services:

  # Create NMOS Registry/Controller container instance
  nmos-registry:
    image: rhastie/nmos-cpp:latest
    container_name: nmos-registry
    hostname: nmos-registry
    domainname: local
    ports:
    - "8080-8081:80-81"
    - "1883:1883"
    volumes:
    - "./registry.json:/home/registry.json"
    environment:
    - RUN_NODE=FALSE
    networks: 
      external:
        ipv4_address: '192.168.6.101'

  # Create NMOS Virtual Node container instance
  nmos-virtnode:
    image: rhastie/nmos-cpp:latest
    container_name: nmos-virtnode
    hostname: nmos-virtnode
    domainname: local
    ports:
    - "9080-9081:80-81"
    volumes:
    - "./node.json:/home/node.json"
    environment:
    - RUN_NODE=TRUE
    networks:
      external:
        ipv4_address: '192.168.6.102'
    depends_on:
    - nmos-registry    

  # Create AMWA NMOS Testing container instance
  nmos-testing:
    image: amwa/nmos-testing:latest
    container_name: nmos-testing
    hostname: nmos-testing
    domainname: local
    entrypoint: |
       /bin/bash -c "/etc/init.d/dbus start;
       /etc/init.d/avahi-daemon start;
       python3 nmos-test.py"
    ports:
    - "5000:5000"
    volumes:
    - "./UserConfig.py:/config/UserConfig.py"
    networks:
      external:
        ipv4_address: '192.168.6.103'
    depends_on:
    - nmos-virtnode


networks:
    external:
        # Create external macvlan subnet using host physical interface allowing containers to have their own IP addresses
        driver: macvlan
        driver_opts:
            parent: eth0
        ipam:
            config:
            - subnet: 192.168.6.0/24
