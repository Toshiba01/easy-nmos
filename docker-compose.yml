version: '3'
services:
  # Create registry container instance
  registry:
    image: rhastie/nmos-cpp:dev
    container_name: nmos-registry
    ports:
    - "8010-8011:8010-8011"
    volumes:
    - "./registry.json:/home/registry.json"
    environment:
    - RUN_NODE=FALSE
    networks: 
      private-nmos:
        ipv4_address: '172.30.101.3'

  # Create node container instance
  virtnode:
    image: rhastie/nmos-cpp:dev
    container_name: nmos-virtnode
    ports:
    - "11000-11001:11000-11001"
    - "12000:12000"
    volumes:
    - "./node.json:/home/node.json"
    environment:
    - RUN_NODE=TRUE
    networks:
      private-nmos:
        ipv4_address: '172.30.101.4'
      external:
        ipv4_address: '192.168.6.101'
    depends_on:
    - registry    

  # Create AMWA-TV NMOS Testing container instance
  nmostesting:
    image: amwa/nmos-testing
    container_name: nmos-testing
    ports:
    - "5000:5000"
    volumes:
    - "./Config.py:/config/Config.py"
    networks:
      private-nmos:
        ipv4_address: '172.30.101.5'
    depends_on:
    - virtnode


networks:
    private-nmos:
        # Create private network for inter-comtainer NMOS communications
        driver: bridge
        ipam:
            config:
            - subnet: 172.30.101.1/24

    external:
        driver: macvlan
        driver_opts:
            parent: ens33
        ipam:
            config:
            - subnet: 192.168.6.1/24
